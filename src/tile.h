/* tile.h - pokgame */
#ifndef POKGAME_TILE_H
#define POKGAME_TILE_H
#include "graphics.h" /* gets 'image' and 'net' */

/* constants */
enum pok_tile_manager_constants
{
    MAX_TILE_IMAGES = 1024
};

/* exceptions generated by this module */
enum pok_ex_tile
{
    pok_ex_tile_domain_error
};

/* tile animation data structure; defines animation sequences for tiles */
struct pok_tile_ani_data
{
    byte_t ticks; /* animation frame waits this many 'ticks' */
    byte_t indirc; /* indirection count from this point in the animation sequence to itself again */
    uint16_t tileid; /* next tile frame in list */
};

enum pok_tile_manager_flags
{
    pok_tile_manager_flag_none = 0x00,
    pok_tile_manager_flag_ani_byref = 0x01
};

struct pok_tile_manager
{
    /* flags bitmask */
    byte_t flags;

    /* reference to graphics subsystem */
    const struct pok_graphics_subsystem* sys;

    /* set of tiles available to the tile manager; these images that must be
       square with dimensions equal to 'sys->dimension' */
    uint16_t tilecnt;
    uint16_t impassability; /* any tile index <= this value is initially considered impassable */
    struct pok_image** tileset;

    /* tile animation data links tiles together to form logical animation sequences; this
       configuration is optional; if loaded, any tileset[id] has some animation frame at
       tileset[tileani[id]] */
    struct pok_tile_ani_data* tileani;
};
void pok_tile_manager_init(struct pok_tile_manager* tman,const struct pok_graphics_subsystem* sys);
void pok_tile_manager_delete(struct pok_tile_manager* tman);
bool_t pok_tile_manager_load_tiles(struct pok_tile_manager* tman,uint16_t imgc,uint16_t impassability,byte_t* data,bool_t byRef);
bool_t pok_tile_manager_load_ani(struct pok_tile_manager* tman,uint16_t anic,struct pok_tile_ani_data* data,bool_t byRef);
enum pok_network_result pok_tile_manager_netread_tiles(struct pok_tile_manager* tman,struct pok_data_source* dsrc,
    struct pok_netobj_readinfo* info);
enum pok_network_result pok_tile_manager_netread_ani(struct pok_tile_manager* tman,struct pok_data_source* dsrc,struct pok_netobj_readinfo* info);
struct pok_image* pok_tile_manager_get_tile(struct pok_tile_manager* tman,uint16_t tileid,uint32_t aniticks);

#endif
